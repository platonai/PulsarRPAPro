name: Nightly Build

on:
  schedule:
    # Runs at 00:00 UTC every day
    - cron: '0 0 * * *'
  # Allow manual workflow runs
  workflow_dispatch:

jobs:
  nightly-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven


      - name: Read VERSION
        id: version
        run: |
          if [ ! -f VERSION ]; then echo "VERSION file not found!" && exit 1; fi
          echo "VERSION=$(head -n 1 VERSION)" >> $GITHUB_ENV

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2




      - name: Start MongoDB container
        run: |
          docker compose up mongodb -d
          sleep 5 # Wait for MongoDB to start

      - name: Check MongoDB container status
        run: |
          if [ "$(docker inspect -f '{{.State.Running}}' mongodb)" != "true" ]; then
            echo "MongoDB container is not running!" && exit 1
          fi


      - name: Build with Maven
        run: |
          chmod +x ./mvnw
          ./mvnw clean install -Pall-modules

      - name: Build Docker image
        run: |
          echo "Building image pulsar-rpa-pro-nightly:${{ env.VERSION }}"
          docker build -t pulsar-rpa-pro-nightly:${{ env.VERSION }} -f Dockerfile .


      - name: Start Docker container
        run: |
          # Start container
          docker run -d --rm --name pulsar-rpa-test -p 8182:8182 -e DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY} $IMAGE_NAME:$VERSION
          sleep 10  # Wait for Spring Boot to start
        env:
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}

      - name: Run curl integration tests
        run: |
          # Run integration tests
          find bin/ -name "*.sh" -exec chmod +x {} \;
          if ! ./bin/run-integration-test.sh; then
            echo "Integration test failed"
            docker logs pulsar-rpa-test
            docker stop pulsar-rpa-test || true
            exit 1
          fi

      - name: Stop Docker container
        if: always()
        run: docker stop pulsar-rpa-pro-test || true



      - name: Stop MongoDB container
        if: always()
        run: |
          docker compose down || true





      - name: Slack Notification
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ci-builds
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: Nightly Build Result
          SLACK_MESSAGE: 'Build status: ${{ job.status }}'
